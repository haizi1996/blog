<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hailin.dao.UserDao" >
  <resultMap id="BaseResultMap" type="com.hailin.model.User" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="imageUrl" property="imageUrl" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name ,username, password, email , imageurl , status
  </sql>

  <select id="listUsersByNameLike" parameterType="java.lang.String" resultType="user">
      SELECT <include refid="Base_Column_List" /> FROM `user`
    <where>
      <if test="name != null and name.length()>0">
        AND `name` LIKE concat('%' , #{name} , '%')
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
    </where>

  </select>

  <update id="removeUser" parameterType="java.lang.Long">
    UPDATE `user` SET status = 0 WHERE  id = #{id}
  </update>

  <insert id="saveUser" parameterType="user" useGeneratedKeys="true" keyProperty="id">
    INSERT INTO `user` (id ,name , username , password , email , imageUrl ) VALUES (#{id},#{name} , #{username} , #{password} , #{email}, #{imageUrl})
  </insert>

  <update id="updateUser" parameterType="user" >
      UPDATE `user`
       <set>
         <if test="name != null">
           name=#{name} ,
         </if>
         <if test="password != null">
           password = #{password} ,
         </if>
         <if test="email != null">
           email = #{email} ,
         </if>
         <if test=" imageUrl != null">
           imageUrl = #{imageUrl}
         </if>
       </set>
    WHERE id = #{id}
  </update>

  <select id="getUserById" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>

  <update id="removeUsersInBatch" parameterType="java.util.List" >
    UPDATE `user` set status = 0
      where id IN
    <foreach collection="users" separator="," item="userId" open="(" close=")">
      #{userId}
    </foreach>
  </update>
  <select id="listUsersByUsernames" parameterType="java.util.Collection" resultType="user">
    SELECT <include refid="Base_Column_List" /> FROM USER where username IN
    <foreach collection="usernames" open="(" separator="," close=")" item="username">
      #{username}
    </foreach>
  </select>
  <select id="findByUsername" parameterType="java.lang.String" resultType="user">
    SELECT <include refid="Base_Column_List"/> FROM `user`
    <where>
      <if test="userName != null and userName.length()>0">
        AND username=#{userName}
      </if>
      <if test="status != null">
        AND status = #{status}
      </if>
    </where>
  </select>


</mapper>